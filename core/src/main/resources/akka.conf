my-pinned-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
  thread-pool-executor.allow-core-timeout=off
}

heartbeat {
  type = Dispatcher
  executor = "fork-join-executor"
}

taskqueue {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
  thread-pool-executor.allow-core-timeout=off
}

launcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
  thread-pool-executor.allow-core-timeout=off
}

filesender-dispatcher {
  executor = "fork-join-executor"
  type = Dispatcher
}

fileuser-dispatcher {
  executor = "fork-join-executor"
  type = Dispatcher
}

transferin {
  executor = "fork-join-executor"
  type = Dispatcher
}

transferout {
  executor = "fork-join-executor"
  type = Dispatcher
}

proxytask-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
}


task-worker-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
}

task-dedicated-io {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}

akka.remote.transport-failure-detector.acceptable-heartbeat-pause = 300 s

akka.remote.netty.tcp {

  maximum-frame-size = 64 MiB
  send-buffer-size = 128 MiB
  receive-buffer-size = 128 MiB

  server-socket-worker-pool.pool-size-max = 4
  client-socket-worker-pool.pool-size-max = 4

}

akka.jvm-shutdown-hooks = off

akka.actor {

 default-dispatcher {
      executor = "fork-join-executor"

      fork-join-executor {
        parallelism-min = 2

        parallelism-max = 8
      }

  }

  guardian-supervisor-strategy = "akka.actor.StoppingSupervisorStrategy"

  serialize-messages = off

  serializers {
      static = "tasks.wire.StaticMessageSerializer"
      sch = "tasks.wire.ScheduleTaskSerializer"
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

  serialization-bindings {
      "tasks.wire.StaticMessage" = static
      "tasks.queue.ScheduleTask" = sch
      "java.io.Serializable" = java
      "com.google.protobuf.Message" = proto
    }

}
